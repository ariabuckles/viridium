TODO for self-hosting
================
[x] subtraction
[x] make 1-2 work (make -2 be parsed as - 2)
[x] handle negative literals: -2
[x] preamble while
[x] make `ret` not compile into a function call
[x] if-else
[x] array indexing
[x] array literals
[x] and
[x] or
[x] quoted table access
[x] output a compiler program
[x] not
[x] multiplication
[x] division
[x] call a function with no arguments
[x] multi-if
[x] fix normalize in arrays
[x] fix ``` multiple times
[x] add 'single quote strings'
[x] fix empty array literal
[x] add `throw`
[x] escape quotes in strings
[x] single-line array literals
[x] rewrite jison/parser-generator.js

TODO to make usable
[x] unescape strings for macros, and 
[x] escape string contents
[x] `rewrite@(node.type) (node)` syntax doesn't work
[x] allow escaping "s in strings
[x] array literals with commas
[x] what to do about commas
[x] regexes
[x] `key = value` syntax instead of (or temporarily `or`) `:` in tables
[x] multi-line statements (skip newline parse in `(`)
[x] single line lambdas auto-return
[x] auto-return lambdas still force you to wrap a single result in parens
[ ] have `if` check for `else` or `if` in incorrect positions
[ ] preamble for
[ ] add an errors compiler pass
[ ] enforce mutable/mutate
[ ] enforce const
[ ] return from outer block
[ ] keywords and/or useable as table keys
[ ] `->` operator

TODO to make everyone happy
================
[ ] ? operator
[ ] `<-` operator?
[ ] what to do about multi-line function calls
[ ] a repl
[ ] dashes in table field names?
[ ] macros
[ ] source maps
[ ] destructuring
[ ] pattern matching
[ ] figure out what to do with all the parens?
[ ] alformat / alc -f
[ ] types

