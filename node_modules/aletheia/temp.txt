
==== INPUT ====
mutable i = 0
while [ret (i < 10)] [
    console.log i
    mutate i = i + 1
]
console.log "done" i


==== PARSED ====
[
    {
        "type": "assignment",
        "modifier": "mutable",
        "left": {
            "type": "variable",
            "name": "i"
        },
        "right": 0
    },
    {
        "type": "unit-list",
        "units": [
            {
                "type": "variable",
                "name": "while"
            },
            {
                "type": "lambda",
                "arguments": [],
                "statements": [
                    {
                        "type": "unit-list",
                        "units": [
                            {
                                "type": "variable",
                                "name": "ret"
                            },
                            {
                                "type": "operation",
                                "left": {
                                    "type": "variable",
                                    "name": "i"
                                },
                                "operation": "<",
                                "right": 10
                            }
                        ]
                    }
                ]
            },
            {
                "type": "lambda",
                "arguments": [],
                "statements": [
                    {
                        "type": "unit-list",
                        "units": [
                            {
                                "type": "table-access",
                                "table": {
                                    "type": "variable",
                                    "name": "console"
                                },
                                "key": "log"
                            },
                            {
                                "type": "variable",
                                "name": "i"
                            }
                        ]
                    },
                    {
                        "type": "assignment",
                        "modifier": "mutate",
                        "left": {
                            "type": "variable",
                            "name": "i"
                        },
                        "right": {
                            "type": "operation",
                            "left": {
                                "type": "variable",
                                "name": "i"
                            },
                            "operation": "+",
                            "right": 1
                        }
                    }
                ]
            }
        ]
    },
    {
        "type": "unit-list",
        "units": [
            {
                "type": "table-access",
                "table": {
                    "type": "variable",
                    "name": "console"
                },
                "key": "log"
            },
            "done",
            {
                "type": "variable",
                "name": "i"
            }
        ]
    }
]

==== NORMALIZED ====
[
    {
        "type": "assignment",
        "modifier": "mutable",
        "left": {
            "type": "variable",
            "name": "i"
        },
        "right": 0
    },
    {
        "type": "unit-list",
        "units": [
            {
                "type": "variable",
                "name": "while"
            },
            {
                "type": "lambda",
                "arguments": [],
                "statements": [
                    {
                        "type": "unit-list",
                        "units": [
                            {
                                "type": "variable",
                                "name": "ret"
                            },
                            {
                                "type": "operation",
                                "left": {
                                    "type": "variable",
                                    "name": "i"
                                },
                                "operation": "<",
                                "right": 10
                            }
                        ]
                    }
                ]
            },
            {
                "type": "lambda",
                "arguments": [],
                "statements": [
                    {
                        "type": "unit-list",
                        "units": [
                            {
                                "type": "table-access",
                                "table": {
                                    "type": "variable",
                                    "name": "console"
                                },
                                "key": "log"
                            },
                            {
                                "type": "variable",
                                "name": "i"
                            }
                        ]
                    },
                    {
                        "type": "assignment",
                        "modifier": "mutate",
                        "left": {
                            "type": "variable",
                            "name": "i"
                        },
                        "right": {
                            "type": "operation",
                            "left": {
                                "type": "variable",
                                "name": "i"
                            },
                            "operation": "+",
                            "right": 1
                        }
                    }
                ]
            }
        ]
    },
    {
        "type": "unit-list",
        "units": [
            {
                "type": "table-access",
                "table": {
                    "type": "variable",
                    "name": "console"
                },
                "key": "log"
            },
            "done",
            {
                "type": "variable",
                "name": "i"
            }
        ]
    }
]

==== REWRITTEN ====
REWRITING ret return
[
    {
        "type": "assignment",
        "modifier": "mutable",
        "left": {
            "type": "variable",
            "name": "i"
        },
        "right": 0
    },
    {
        "type": "unit-list",
        "units": [
            {
                "type": "variable",
                "name": "_while"
            },
            {
                "type": "lambda",
                "arguments": [],
                "statements": [
                    {
                        "type": "unit-list",
                        "units": [
                            {
                                "type": "variable",
                                "name": "ret"
                            },
                            {
                                "type": "operation",
                                "left": {
                                    "type": "variable",
                                    "name": "i"
                                },
                                "operation": "<",
                                "right": 10
                            }
                        ]
                    }
                ]
            },
            {
                "type": "lambda",
                "arguments": [],
                "statements": [
                    {
                        "type": "unit-list",
                        "units": [
                            {
                                "type": "table-access",
                                "table": {
                                    "type": "variable",
                                    "name": "console"
                                },
                                "key": "log"
                            },
                            {
                                "type": "variable",
                                "name": "i"
                            }
                        ]
                    },
                    {
                        "type": "assignment",
                        "modifier": "mutate",
                        "left": {
                            "type": "variable",
                            "name": "i"
                        },
                        "right": {
                            "type": "operation",
                            "left": {
                                "type": "variable",
                                "name": "i"
                            },
                            "operation": "+",
                            "right": 1
                        }
                    }
                ]
            }
        ]
    },
    {
        "type": "unit-list",
        "units": [
            {
                "type": "table-access",
                "table": {
                    "type": "variable",
                    "name": "console"
                },
                "key": "log"
            },
            "done",
            {
                "type": "variable",
                "name": "i"
            }
        ]
    }
]

==== OUTPUT ====
var _else = {identifier: 'else'};
var _if = function(cond1, lambda1, cond2, lambda2) {
    if (arguments.length % 2 !== 0) {
        throw new Error('if called with an odd number of arguments');
    }
    var i = 0;
    for (var i = 0; i < arguments.length; i += 2) {
        var condition = arguments[i];
        if (condition != null && condition !== false) {
            return arguments[i + 1].call(undefined);
        }
    }
};

var _while = function(conditionLambda, bodyLambda) {
    while (conditionLambda.call(undefined)) {
        bodyLambda.call(undefined);
    }
}

var i = 0;
_while((function() {
ret((i < 10));
}), (function() {
console.log(i);
i = (i + 1);
}));
console.log("done", i);


==== EXECUTING ====
